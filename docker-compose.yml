version: '3.8'

services:
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: ecommerce-auth
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - SUPABASE_URL=${VITE_SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${VITE_SUPABASE_ANON_KEY}
      - JWT_SECRET=your-secret-key-change-in-production
    networks:
      - ecommerce-network
    restart: unless-stopped

  product:
    build:
      context: ./product
      dockerfile: Dockerfile
    container_name: ecommerce-product
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - SUPABASE_URL=${VITE_SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${VITE_SUPABASE_ANON_KEY}
      - JWT_SECRET=your-secret-key-change-in-production
    networks:
      - ecommerce-network
    restart: unless-stopped
    depends_on:
      - auth

  order:
    build:
      context: ./order
      dockerfile: Dockerfile
    container_name: ecommerce-order
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - SUPABASE_URL=${VITE_SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${VITE_SUPABASE_ANON_KEY}
    networks:
      - ecommerce-network
    restart: unless-stopped
    depends_on:
      - auth
      - product

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: ecommerce-gateway
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - AUTH_SERVICE_URL=http://auth:3000
      - PRODUCT_SERVICE_URL=http://product:3001
      - ORDER_SERVICE_URL=http://order:3002
    networks:
      - ecommerce-network
    restart: unless-stopped
    depends_on:
      - auth
      - product
      - order

networks:
  ecommerce-network:
    driver: bridge
